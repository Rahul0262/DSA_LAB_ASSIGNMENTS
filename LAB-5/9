#include<stdio.h>
int n,arr[5000];

int minimum(int a, int b) {
    return (a < b)? a : b;
} 

int min(int arr[], int l, int h) 
{ 
    int mn = arr[l]; 
    for (int i=l+1; i<=h; i++) 
       if (mn > arr[i]) 
         mn = arr[i]; 
    return mn; 
} 
int max(int arr[], int l, int h) 
{ 
    int mx = arr[l]; 
    for (int i=l+1; i<=h; i++) 
       if (mx < arr[i]) 
         mx = arr[i]; 
    return mx; 
} 

int minremovals(int arr[],int l,int h)
{
    // If there is 1 or less elements, return 0 
    // For a single element, 2*min > max  
    // (Assumption: All elements are positive in arr[]) 
    if (l >= h) return 0; 
  
    // 1) Find minimum and maximum in arr[l..h] 
    int mn = min(arr, l, h); 
    int mx = max(arr, l, h); 
  
    //If the property is followed, no removals needed 
    if (2*mn > mx) 
       return 0; 
  
    // Otherwise remove a character from left end and recur, 
    // then remove a character from right end and recur, take 
    // the minimum of two is returned 
    return minimum(minremovals(arr, l+1, h) , minremovals(arr, l, h-1)) + 1; 
}

int main()
{
    scanf("%d",&n);
    for(int i=0;i<n;i++)
        scanf("%d",&arr[i]);
    printf("%d\n",minremovals(arr,0,n-1));
}
